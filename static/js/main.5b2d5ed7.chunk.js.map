{"version":3,"sources":["redux/reducers/associations.js","Services/fetchService.js","Services/associationService.js","redux/thunks/associations.js","components/AssociationForm/AssociationForm.js","redux/reducers/history.js","Services/draftService.js","redux/thunks/history.js","components/PatientInfo/PatientInfo.js","redux/reducers/draft.js","redux/thunks/draft.js","components/NewStatusForm/NewStatusForm.js","redux/reducers/nextStates.js","redux/reducers/disease.js","redux/thunks/disease.js","redux/reducers/patient.js","redux/reducers/patients.js","redux/reducers/index.js","redux/index.js","components/StatusDraft/StatusDraft.js","redux/thunks/nextStates.js","components/NextState/NextState.js","components/Associations/Associations.js","components/States/States.js","Services/patientService.js","redux/thunks/patient.js","components/NewPatientFormModal/NewPatientFormModal.js","components/SidebarList/SidebarList.js","redux/thunks/patients.js","App.js","index.js"],"names":["put","associations","type","payload","baseUrl","get","url","fetch","mode","headers","Content-Type","Access-Control-Allow-Origin","then","response","status","json","Promise","reject","statusText","post","data","params","method","body","JSON","stringify","getAssociations","patientId","concat","createAssociation","AssociationForm","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","text","showModal","onSubmit","props","getData","console","warn","predicate","create","closeModal","setState","inherits","createClass","key","value","_this2","_this$props","position","_this$props$style","style","_this$state","iconClassName","react_default","a","createElement","Modal","trigger","onClick","Icon","name","className","open","onClose","Header","Content","Form","Field","control","TextArea","onChange","e","target","Actions","Button","positive","icon","content","Component","connect","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","wrap","_context2","prev","next","service","stop","_x2","history","getDraft","id","createDraft","commitDraft","PatientInfo","_React$Component","nextProps","patient","getHistory","_this$props$patient","birthDate","dateObj","Date","year","getFullYear","month","getMonth","now","age","components_AssociationForm_AssociationForm","map","event","submittedOn","React","store","_ref","_callee","_context","sent","log","actionCreaters","_x","draft","actionCreators","abrupt","result","clear","NewStatusForm","healthMatter","handleSubmit","preventDefault","onDraftUpdate","diseaseData","find","onHMChange","onResultChange","getAssociationData","attribute","_this$state2","options","attr","Group","inline","Select","label","placeholder","Input","basic","color","states","disease","patients","combineReducers","undefined","action","toConsumableArray","objectSpread","nextStates","createStore","reducers","applyMiddleware","reduxThunk","StatusDraft","symptomsAmount","onPlusClick","onDraftSubmit","alert","updated","attributes","push","medicines","stateId","getNextStates","_componentDidMount","_callee3","_context3","getDisease","_this$props2","currentState","filter","diseaseItem","some","getState","description","Divider","fitted","NewStatusForm_NewStatusForm_NewStatusForm","statusId","fill","el","index","size","fluid","draftThunks","clearDraft","_ref3","_x3","diseaseThunks","NextState","Label","recommended","tag","errorCause","confirmState","Associations","_componentWillMount","association","States","updateState","associationData","_componentWillReceiveProps","draftInitData","t0","Fragment","components_StatusDraft_StatusDraft","components_Associations_Associations","nextState","NextState_NextState_NextState","assign","getPatientById","createPatient","genderOptions","NewPatientForm","diseaseId","doctorId","react_semantic_ui_datepickers_default","onDateChange","savePatient","SidebarList","opened","animating","sidebarRef","openSidebar","document","addEventListener","closeSidebar","contains","removeEventListener","getPatients","cursor","_patientOnClick","getPatient","click","Ref","innerRef","node","Sidebar","as","Menu","animation","vertical","visible","onShow","onHide","width","Item","patientOnClick","App","burgerRef","Pushable","Segment","components_SidebarList_SidebarList","Pusher","attached","burger","components_PatientInfo_PatientInfo","components_States_States","ReactDOM","render","es","App_App","getElementById"],"mappings":"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","file":"static/js/main.5b2d5ed7.chunk.js","sourcesContent":["export const ASSOCIATIONS_PUT = 'associations/put';\r\nexport const ASSOCIATIONS_CLEAR = 'associations/clear';\r\nexport const ASSOCIATIONS_ADD = 'associations/add';\r\n\r\nexport const put = associations => ({\r\n    type: ASSOCIATIONS_PUT,\r\n    payload: associations\r\n});\r\n\r\nexport const clear = () => ({\r\n    type: ASSOCIATIONS_CLEAR\r\n});\r\n\r\nexport const add = association => ({\r\n    type: ASSOCIATIONS_ADD,\r\n    payload: association\r\n});\r\n\r\nexport default (state = [], action) => {\r\n    switch (action.type) {\r\n    case ASSOCIATIONS_PUT:\r\n        return action.payload;\r\n    case ASSOCIATIONS_CLEAR:\r\n        return [];\r\n    case ASSOCIATIONS_ADD:\r\n        return [\r\n            ...state,\r\n            action.payload\r\n        ];\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","const baseUrl = 'http://188.242.178.146:8080';\r\n\r\nexport function get (url) {\r\n    const params = {\r\n        mode: 'cors',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        }\r\n    };\r\n\r\n    return fetch(baseUrl + url, params).then(response => {\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response.json();\r\n        } else {\r\n            return Promise.reject(response.statusText);\r\n        }\r\n    });\r\n}\r\n\r\nexport function post (url, data) {\r\n    const params = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n\r\n    return fetch(baseUrl + url, params);\r\n}\r\n\r\nexport function put (url, data) {\r\n    const params = {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        },\r\n        body: JSON.stringify(data)\r\n    };\r\n\r\n    return fetch(baseUrl + url, params);\r\n}\r\n","import { get, post } from './fetchService';\r\n\r\nexport function getAssociations (patientId) {\r\n    return get(`/associations?patientId=${patientId}`);\r\n}\r\n\r\nexport function createAssociation (data) {\r\n    return post(`/doctors/1/associations`, data);\r\n}\r\n","import * as actionCreaters from '../reducers/associations';\r\nimport * as service from '../../Services/associationService';\r\n\r\nexport const get = (patientId) => {\r\n    return async dispatch => {\r\n        const associations = await service.getAssociations(patientId);\r\n\r\n        dispatch(actionCreaters.put(associations));\r\n    };\r\n};\r\n\r\nexport const create = data => {\r\n    return async dispatch => {\r\n        await service.createAssociation(data);\r\n\r\n        dispatch(actionCreaters.add(data));\r\n    };\r\n};\r\n\r\nexport const clear = () => dispatch => dispatch(actionCreaters.clear());\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, Icon, Modal, TextArea } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport './AssociationForm.css';\r\nimport * as associationsThunks from '../../redux/thunks/associations';\r\n\r\nexport class AssociationForm extends Component {\r\n  state = {\r\n      text: '',\r\n      showModal: false\r\n  };\r\n\r\n  onSubmit = () => {\r\n      if (typeof this.props.getData !== 'function') {\r\n          console.warn('getData method is not provided');\r\n      }\r\n\r\n      const predicate = this.props.getData();\r\n      const text = this.state.text;\r\n\r\n      this.props.create({\r\n          predicate,\r\n          text\r\n      });\r\n\r\n      this.closeModal();\r\n  };\r\n\r\n  closeModal = () => {\r\n      this.setState({ showModal: false });\r\n  };\r\n\r\n  render () {\r\n      const { position, style = {} } = this.props;\r\n      const { text, showModal } = this.state;\r\n\r\n      let iconClassName = 'AssociationForm__Icon';\r\n\r\n      switch (position) {\r\n      case 'right':\r\n          iconClassName += ' AssociationForm__Icon--right';\r\n          break;\r\n      default:\r\n          iconClassName += ' AssociationForm__Icon--left';\r\n      }\r\n\r\n      return (\r\n          <Modal\r\n              trigger={\r\n                  <span onClick={() => { this.setState({ showModal: true }); }}>\r\n                      <Icon name='sticky note outline' className={iconClassName} style={style} />\r\n                  </span>\r\n              }\r\n\r\n              open={showModal}\r\n              onClose={this.closeModal}\r\n          >\r\n              <Modal.Header>Add association</Modal.Header>\r\n              <Modal.Content>\r\n                  <Form>\r\n                      <Form.Field control={TextArea} value={text} onChange={(e) => { this.setState({ text: e.target.value }); }} />\r\n                  </Form>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                  <Button positive icon='checkmark' content=\"Save\" onClick={this.onSubmit} />\r\n              </Modal.Actions>\r\n          </Modal>\r\n      );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    {\r\n        create: associationsThunks.create\r\n    }\r\n)(AssociationForm);\r\n","export const HISTORY_PUT = 'history/put';\r\nexport const HISTORY_CLEAR = 'history/clear';\r\n\r\nexport const put = history => ({\r\n    type: HISTORY_PUT,\r\n    payload: history\r\n});\r\n\r\nexport const clear = () => ({\r\n    type: HISTORY_CLEAR\r\n});\r\n\r\nexport default (state = [], action) => {\r\n    switch (action.type) {\r\n    case HISTORY_PUT:\r\n        return action.payload;\r\n    case HISTORY_CLEAR:\r\n        return [];\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import { get, post, put } from './fetchService';\r\n\r\nexport function getDraft (id) {\r\n    return get(`/patients/${id}/status/draft`);\r\n}\r\n\r\nexport function createDraft (id, data) {\r\n    return put(`/patients/${id}/status/draft`, data);\r\n}\r\n\r\nexport function commitDraft (id) {\r\n    return post(`/patients/${id}/status/draft`);\r\n}\r\n// TODO: Переместить\r\nexport function getDiseaseData (id) {\r\n    return get(`/patients/${id}/status/attributes`);\r\n}\r\n\r\nexport function getHistory (id) {\r\n    return get(`/patients/${id}/statuses`);\r\n}\r\n\r\nexport function getNextStates (id) {\r\n    return get(`/patients/${id}/status/draft/states`);\r\n}\r\n","import * as actionCreaters from '../reducers/history';\r\nimport * as service from '../../Services/draftService';\r\n\r\nexport const get = (patientId) => {\r\n    return async (dispatch) => {\r\n        const history = await service.getHistory(patientId);\r\n        console.log('GET HISTORY', history);\r\n        dispatch(actionCreaters.put(history));\r\n    };\r\n};\r\n\r\nexport const clear = () => {\r\n    return dispatch => dispatch(actionCreaters.clear());\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './PatientInfo.css';\r\nimport AssociationForm from '../AssociationForm/AssociationForm';\r\nimport * as historyThunks from '../../redux/thunks/history';\r\n\r\nexport class PatientInfo extends React.Component {\r\n    state = {\r\n        history: []\r\n    };\r\n\r\n    componentWillReceiveProps (nextProps) {\r\n        const { patient } = nextProps;\r\n\r\n        if (patient && this.props.patient && patient.id === this.props.patient.id) {\r\n            return;\r\n        }\r\n\r\n        this.props.getHistory(patient.id);\r\n    }\r\n\r\n    render () {\r\n        const { name, birthDate } = this.props.patient;\r\n        const { history } = this.props;\r\n\r\n        const dateObj = new Date(birthDate);\r\n        const year = dateObj.getFullYear();\r\n        const month = dateObj.getMonth();\r\n        const now = new Date();\r\n\r\n        const age = now.getFullYear() - year + (now.getMonth() - month < 0 ? 1 : 0);\r\n\r\n        return (\r\n            <aside className=\"PatientInfo\">\r\n                <section className=\"PatientInfo-Name\">\r\n                    <h2>{name}</h2>\r\n                </section>\r\n                <section className=\"PatientInfo-Description\">\r\n                    <h3>Info</h3>\r\n                    <div>\r\n                        <div style={{ position: 'relative' }}>\r\n                            <AssociationForm position='right' getData={() => `eq($patient.age, ${age})`} />\r\n                            <p>Birth date: {birthDate}</p>\r\n                        </div>\r\n                        {/* <p>Gender: {gender}</p> */}\r\n                    </div>\r\n                </section>\r\n                <section className=\"PatientInfo-History\">\r\n                    <h3>History</h3>\r\n                    {history && history !== {} && history.map( event=>\r\n                        <div key={event.id}>\r\n                            <p>date:{event.submittedOn}</p>\r\n                            <p>name:{event.state.name}</p>\r\n                            <br/>\r\n                        </div>)\r\n                    }\r\n                </section>\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    store => ({\r\n        patient: store.patient,\r\n        history: store.history\r\n    }),\r\n    {\r\n        getHistory: historyThunks.get\r\n    }\r\n)(PatientInfo);\r\n","export const DRAFT_PUT = 'draft/put';\r\nexport const DRAFT_CLEAR = 'draft/clear';\r\nexport const DRAFT_UPDATE_STATE = 'draft/update-state';\r\n\r\nexport const put = draft => ({\r\n    type: DRAFT_PUT,\r\n    payload: draft\r\n});\r\n\r\nexport const clear = () => ({\r\n    type: DRAFT_CLEAR\r\n});\r\n\r\nexport const updateState = (state) => ({\r\n    type: DRAFT_UPDATE_STATE,\r\n    payload: state\r\n});\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n    case DRAFT_PUT:\r\n        return action.payload;\r\n    case DRAFT_CLEAR:\r\n        return {};\r\n    case DRAFT_UPDATE_STATE:\r\n\r\n        return {\r\n            ...state,\r\n            state: action.payload\r\n        };\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import * as service from '../../Services/draftService';\r\nimport * as actionCreators from '../reducers/draft';\r\n\r\nexport const get = (id) => {\r\n    return async (dispatch) => {\r\n        const draft = await service.getDraft(id);\r\n        console.log('GET DRAFT DATA', draft);\r\n        dispatch(actionCreators.put(draft));\r\n\r\n        return draft;\r\n    };\r\n};\r\n\r\nexport const create = (id, draft) => {\r\n    return async (dispatch) => {\r\n        console.log('CREATE DRAFT DATA', draft);\r\n\r\n        const result = await service.createDraft(id, draft);\r\n\r\n        console.log('CREATE DRAFT', result);\r\n        dispatch(actionCreators.put(draft));\r\n    };\r\n};\r\n\r\nexport const commit = (id, draft) => {\r\n    return async dispatch => {\r\n        await service.commitDraft(id, draft);\r\n    };\r\n};\r\n\r\nexport const clear = () => {\r\n    return dispatch => {\r\n        dispatch(actionCreators.clear());\r\n    };\r\n};\r\n\r\nexport const updateState = (state) => {\r\n    return dispatch => {\r\n        dispatch(actionCreators.updateState(state));\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { Form, Button, Input } from 'semantic-ui-react';\r\nimport './NewStatusForm.css';\r\nimport AssociationForm from '../AssociationForm/AssociationForm';\r\n\r\nexport default class NewStatusForm extends React.Component {\r\n    state = {\r\n        healthMatter: '',\r\n        result: ''\r\n    };\r\n\r\n    componentDidMount () {\r\n        const { attribute } = this.props;\r\n        if (attribute) {\r\n            this.setState({\r\n                healthMatter: attribute.id,\r\n                result: attribute.value\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { onDraftUpdate } = this.props;\r\n        const { healthMatter, result } = this.state;\r\n\r\n        const name = this.props.diseaseData.find(data => data.id === healthMatter).name;\r\n\r\n        onDraftUpdate(\r\n            { id: healthMatter, value: result, name }\r\n        );\r\n        this.setState({\r\n            healthMatter: '',\r\n            result: ''\r\n        });\r\n    };\r\n\r\n    onHMChange = (e, { value }) => this.setState({ healthMatter: value });\r\n\r\n    onResultChange = (event) => this.setState({\r\n        // ...this.state,\r\n        result: event.target.value\r\n    });\r\n\r\n    getAssociationData = () => {\r\n        return `eq($status.${this.state.healthMatter}, ${this.state.result})`;\r\n    };\r\n\r\n    render () {\r\n        const { className, diseaseData } = this.props;\r\n        let { healthMatter, result } = this.state;\r\n        const options = diseaseData && diseaseData.map(attr => {\r\n            return {\r\n                key: attr.id,\r\n                text: attr.name,\r\n                value: attr.id\r\n            };\r\n        });\r\n\r\n        return (\r\n            <section className={`NewStatus ${className || ''}`}>\r\n\r\n                {options &&\r\n                    <Form className=\"NewStatus-Form\" onSubmit={this.handleSubmit}>\r\n                        <Form.Group inline>\r\n                            <Form.Field className='NewStatus-Field'>\r\n                                <Form.Select\r\n                                    label='Analysis or symptom'\r\n                                    options={options}\r\n                                    placeholder='data'\r\n                                    value={healthMatter}\r\n                                    onChange={this.onHMChange}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field className='NewStatus-Field'>\r\n                                <Form.Field\r\n                                    control={Input}\r\n                                    label='Result'\r\n                                    value={result}\r\n                                    onChange={this.onResultChange}\r\n                                />\r\n                            </Form.Field>\r\n                            <Button type='submit' basic color='green'>Submit</Button>\r\n                            {healthMatter && result &&\r\n                            <AssociationForm style={{ position: 'relative' }} getData={this.getAssociationData}/>}\r\n                        </Form.Group>\r\n                    </Form>}\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","export const NEXT_STATES_PUT = 'nextStates/put';\r\nexport const NEXT_STATES_CLEAR = 'nextStates/clear';\r\n\r\nexport const put = states => ({\r\n    type: NEXT_STATES_PUT,\r\n    payload: states\r\n});\r\n\r\nexport const clear = () => ({\r\n    type: NEXT_STATES_CLEAR\r\n});\r\n\r\nexport default (state = [], action) => {\r\n    switch (action.type) {\r\n    case NEXT_STATES_PUT:\r\n        return action.payload;\r\n    case NEXT_STATES_CLEAR:\r\n        return [];\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","export const DISEASE_PUT = 'disease/put';\r\nexport const DISEASE_CLEAR = 'disease/clear';\r\n\r\nexport const put = disease => ({\r\n    type: DISEASE_PUT,\r\n    payload: disease\r\n});\r\n\r\nexport const clear = () => ({\r\n    type: DISEASE_CLEAR\r\n});\r\n\r\nexport default (state = [], action) => {\r\n    switch (action.type) {\r\n    case DISEASE_PUT:\r\n        return action.payload;\r\n    case DISEASE_CLEAR:\r\n        return [];\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import * as actionCreaters from '../reducers/disease';\r\nimport * as service from '../../Services/draftService';\r\n\r\nexport const get = (patientId) => {\r\n    return async (dispatch) => {\r\n        const disease = await service.getDiseaseData(patientId);\r\n\r\n        console.log('GOT DISEASE', disease);\r\n\r\n        dispatch(actionCreaters.put(disease));\r\n\r\n        return disease;\r\n    };\r\n};\r\n\r\nexport const clear = () => {\r\n    return dispatch => dispatch(actionCreaters.clear());\r\n};\r\n","export const PATIENT_PUT = 'patient/put';\r\nexport const PATIENT_CLEAR = 'patient/clear';\r\n\r\nexport const put = patient => ({\r\n    type: PATIENT_PUT,\r\n    payload: patient\r\n});\r\n\r\nexport const clear = () => ({\r\n    type: PATIENT_CLEAR\r\n});\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n    case PATIENT_PUT:\r\n        return action.payload;\r\n    case PATIENT_CLEAR:\r\n        return {};\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","export const PATIENTS_PUT = 'patients/put';\r\nexport const PATIENTS_CLEAR = 'patients/clear';\r\n\r\nexport const put = patients => ({\r\n    type: PATIENTS_PUT,\r\n    payload: patients\r\n});\r\n\r\nexport const clear = () => ({\r\n    type: PATIENTS_CLEAR\r\n});\r\n\r\nexport default (state = [], action) => {\r\n    switch (action.type) {\r\n    case PATIENTS_PUT:\r\n        return action.payload;\r\n    case PATIENTS_CLEAR:\r\n        return [];\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport associations from './associations';\r\nimport draft from './draft';\r\nimport patient from './patient';\r\nimport patients from './patients';\r\nimport nextStates from './nextStates';\r\nimport disease from './disease';\r\nimport history from './history';\r\n\r\nexport default combineReducers({\r\n    associations,\r\n    draft,\r\n    patient,\r\n    patients,\r\n    nextStates,\r\n    disease,\r\n    history\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nexport default createStore(reducers, applyMiddleware(reduxThunk));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Divider, Icon } from 'semantic-ui-react';\r\nimport NewStatusForm from '../NewStatusForm/NewStatusForm';\r\nimport './StatusDraft.css';\r\nimport AssociationForm from '../AssociationForm/AssociationForm';\r\nimport * as draftThunks from '../../redux/thunks/draft';\r\nimport * as nextStatesThunks from '../../redux/thunks/nextStates';\r\nimport * as diseaseThunks from '../../redux/thunks/disease';\r\nimport store from '../../redux';\r\n\r\nexport class StatusDraft extends React.Component {\r\n    state = {\r\n        symptomsAmount: 1\r\n    };\r\n\r\n    async componentDidMount () {\r\n        const { patientId } = this.props;\r\n        if (patientId) {\r\n            await this.props.getDraft(patientId);\r\n\r\n            console.log('DRAFT', this.props.draft);\r\n\r\n            await this.props.getDisease(patientId);\r\n\r\n            console.log('GET diseaseData', this.props.disease);\r\n\r\n            await this.props.getNextStates(patientId);\r\n        }\r\n    }\r\n\r\n    onPlusClick = () => {\r\n        this.setState({\r\n            symptomsAmount: this.state.symptomsAmount + 1\r\n        });\r\n    };\r\n\r\n    onDraftSubmit = async () => {\r\n        const { patientId } = this.props;\r\n        await this.onDraftUpdate();\r\n        await this.props.commitDraft(patientId);\r\n        alert('saved!');\r\n    };\r\n\r\n    onDraftUpdate = async (attribute) => {\r\n        const { patientId, state, draft } = this.props;\r\n        if(!state) return;\r\n        if (draft && draft.attributes && attribute) {\r\n            let updated = false;\r\n            draft.attributes.map((attr) => {\r\n                if (attr.id === attribute.id) {\r\n                    updated = true;\r\n                    attr.value = attribute.value;\r\n                }\r\n                return attr;\r\n            });\r\n            if (!updated) draft.attributes.push(attribute);\r\n        }\r\n\r\n        const data = {\r\n            attributes: (draft && draft.attributes) || [],\r\n            medicines: (draft && draft.medicines) || [],\r\n            stateId: state.id\r\n        };\r\n\r\n        await this.props.createDraft(patientId, data);\r\n        await this.props.getNextStates(patientId);\r\n    };\r\n\r\n    render () {\r\n        const { status, patientId, draft, disease } = this.props;\r\n        const currentState = draft.state || status.state;\r\n        let attributes = draft.attributes || [];\r\n\r\n        const { symptomsAmount } = this.state;\r\n        let diseaseData = disease.filter(diseaseItem =>{\r\n            return !attributes.some(attribute => attribute.id === diseaseItem.id);\r\n        });\r\n        console.log('STORE', store.getState());\r\n        console.log('state', this.props);\r\n\r\n        return (\r\n            <div className='States-Draft Draft'>\r\n                <AssociationForm/>\r\n                <h2 className='States-Heading'>Черновик состояния</h2>\r\n                <p>\r\n                    last updated: {status.submittedOn}\r\n                </p>\r\n                { currentState && <div>\r\n                    <p>Текущее состояние</p>\r\n                    <p>state name: {currentState.name}</p>\r\n                    <p>\r\n                        description:{currentState.description}\r\n                    </p>\r\n                </div>\r\n                    }\r\n                <Divider fitted/>\r\n                {attributes && attributes.map(attribute => (\r\n                    <NewStatusForm\r\n                        key={attribute.id}\r\n                        patientId={patientId}\r\n                        statusId={status.id}\r\n                        onDraftUpdate={this.onDraftUpdate}\r\n                        diseaseData={[attribute]}\r\n                        attribute={attribute}\r\n                    />\r\n                ))}\r\n                {diseaseData  && new Array(symptomsAmount).fill(true).map((el, index) =>\r\n                    <div className='Draft-StatusFormContainer' key={index}>\r\n                        {index === symptomsAmount - 1 &&\r\n                        <Icon\r\n                            name='plus circle'\r\n                            color='green'\r\n                            size='large'\r\n                            className='Draft-PlusButton'\r\n                            onClick={this.onPlusClick}\r\n                        />\r\n                        }\r\n                        <NewStatusForm\r\n                            className={index < symptomsAmount - 1 ? 'Draft-StatusForm--Margined' : ''}\r\n                            patientId={patientId}\r\n                            statusId={status.id}\r\n                            onDraftUpdate={this.onDraftUpdate}\r\n                            diseaseData={diseaseData}\r\n                        />\r\n                    </div>\r\n                )}\r\n                <Divider fitted/>\r\n                <br/>\r\n                <Button type=\"submit\" fluid positive onClick={this.onDraftSubmit}>Save draft</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    store => ({\r\n        draft: store.draft,\r\n        disease: store.disease\r\n    }),\r\n    {\r\n        getDraft: draftThunks.get,\r\n        clearDraft: draftThunks.clear,\r\n        commitDraft: draftThunks.commit,\r\n        createDraft: draftThunks.create,\r\n        getNextStates: nextStatesThunks.get,\r\n        getDisease: diseaseThunks.get\r\n    }\r\n)(StatusDraft);\r\n","import * as actionCreaters from '../reducers/nextStates';\r\nimport * as service from '../../Services/draftService';\r\n\r\nexport const get = (patientId) => {\r\n    return async (dispatch) => {\r\n        const states = await service.getNextStates(patientId);\r\n        console.log('GET NEXT', states);\r\n        dispatch(actionCreaters.put(states));\r\n\r\n        return states;\r\n    };\r\n};\r\n\r\nexport const clear = () => {\r\n    return (dispatch) => dispatch(actionCreaters.clear());\r\n};\r\n","import React from 'react';\r\nimport { Button, Label } from 'semantic-ui-react';\r\nimport './NextState.css';\r\nimport AssociationForm from '../AssociationForm/AssociationForm';\r\n\r\nexport const NextState = (props) => (\r\n    <div className=\"States-NextState NextState\">\r\n        <AssociationForm position='right' getData={() => `eq($StatusId, ${props.id})`} />\r\n        <Label className=\"NextState-Label\"\r\n            color={props.recommended ? 'green' : 'red'} tag>\r\n            {props.recommended ? 'recommended' : 'not recommended'}\r\n        </Label>\r\n        <div className=\"NextState-Content\">\r\n            <h3 className='States-Heading'>\r\n                {props.state.name}\r\n            </h3>\r\n            <p>description: {props.state.description}</p>\r\n            {props.errorCause && <p>reason: {props.errorCause}</p>}\r\n            <Button className=\"NextState-Button\" basic color='teal'\r\n                onClick={() => props.confirmState(props.state)}>Confirm</Button>\r\n        </div>\r\n    </div>\r\n);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as associationsThunks from '../../redux/thunks/associations';\r\n\r\nexport class Associations extends Component {\r\n    async componentWillMount () {\r\n        await this.props.getAssociations(this.props.patientId);\r\n\r\n        console.log('GET Associations', this.props.associations);\r\n    }\r\n\r\n    render () {\r\n        const { associations } = this.props;\r\n\r\n        return (\r\n            <div className='States-Draft'>\r\n                <h2>Ассоциации</h2>\r\n                {associations.map(association => {\r\n                    return (\r\n                        <div key={association.id}>\r\n                            <p><b>{association.type}: </b>{association.text}</p>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    store => ({\r\n        associations: store.associations,\r\n        patientId: store.patient.id\r\n    }),\r\n    {\r\n        getAssociations: associationsThunks.get\r\n    }\r\n)(Associations);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './States.css';\r\nimport * as draftThunks from '../../redux/thunks/draft';\r\nimport StatusDraft from '../StatusDraft/StatusDraft';\r\nimport { NextState } from '../NextState/NextState';\r\nimport AssociationForm from '../AssociationForm/AssociationForm';\r\nimport Associations from '../Associations/Associations';\r\nimport * as diseaseThunks from \"../../redux/thunks/disease\";\r\n\r\nexport class States extends React.Component {\r\n    state = {\r\n        state: null\r\n    };\r\n\r\n    async componentWillReceiveProps (nextProps) {\r\n        const { patientId, status } = nextProps;\r\n\r\n        if (!patientId || patientId === this.props.patientId) {\r\n            return;\r\n        }\r\n\r\n        if (status && this.props.status && status.state.id === this.props.status.state.id) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await this.props.getDraft(patientId);\r\n        } catch (e) {\r\n            const draftInitData = {\r\n                stateId: status.state.id,\r\n                medicines: [],\r\n                attributes: []\r\n            };\r\n            await this.props.createDraft(patientId, draftInitData);\r\n            await this.props.getDisease(patientId);\r\n        }\r\n    }\r\n\r\n    confirmState = (state) => {\r\n        this.props.clearDraft();\r\n        this.props.updateState(state);\r\n    };\r\n\r\n    associationData = () => {\r\n        return `eq($StatusId, ${this.props.status.id})`;\r\n    };\r\n\r\n    render () {\r\n        const { patientId, status, nextStates, draft } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {status && (<section className=\"States\">\r\n                    <div className=\"States-PrevWrap States-Wrap\">\r\n                        <div className=\"States-Prev\">\r\n                            <AssociationForm getData={this.associationData} />\r\n                            <h2 className='States-Heading'>Текущее состояние</h2>\r\n                            <p>name: {status.state.name}</p>\r\n                            <p>description: {status.state.description}</p>\r\n                            <p>updated on: {status.submittedOn}</p>\r\n                            {status.attributes && status.attributes.map(attribute =>\r\n                                <p key={attribute.id} >{attribute.name} - {attribute.value}</p>)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"States-DraftWrap States-Wrap\">\r\n                        <StatusDraft patientId={patientId} state={draft.state} status={status}/>\r\n                        <Associations />\r\n                    </div>\r\n                    {nextStates.length ? <div className=\"States-NextWrap States-Wrap\">\r\n                        <div className=\"States-Next\">\r\n                            {nextStates.map(nextState =>\r\n                                <NextState key={nextState.state.id} confirmState={this.confirmState} {...nextState} />\r\n                            )}\r\n                        </div>\r\n                    </div> : null\r\n                    }\r\n                </section>)}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    store => ({\r\n        nextStates: store.nextStates,\r\n        draft: store.draft,\r\n        patientId: store.patient.id,\r\n        status: store.patient.status\r\n    }),\r\n    {\r\n        getDraft: draftThunks.get,\r\n        createDraft: draftThunks.create,\r\n        clearDraft: draftThunks.clear,\r\n        updateState: draftThunks.updateState,\r\n        getDisease: diseaseThunks.get\r\n    }\r\n)(States);\r\n","import { get, post } from './fetchService';\r\n\r\nexport function getPatients () {\r\n    return get('/patients');\r\n}\r\n\r\nexport function getPatientById (id) {\r\n    return get(`/patients/${id}`);\r\n}\r\n\r\nexport function createPatient (data) {\r\n    return post('/patients', data);\r\n}\r\n","import * as actionCreaters from '../reducers/patient';\r\nimport * as service from '../../Services/patientService';\r\n\r\nexport const get = (id) => {\r\n    return async dispatch => {\r\n        const patient = await service.getPatientById(id);\r\n\r\n        dispatch(actionCreaters.put(patient));\r\n    };\r\n};\r\n\r\nexport const create = (data) => {\r\n    return async dispatch => {\r\n        await service.createPatient(data);\r\n\r\n        // TODO: maybe dispatch something??\r\n    };\r\n};\r\n\r\nexport const clear = () => dispatch => dispatch(actionCreaters.clear());\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Modal, Button, Form, Select, Input } from 'semantic-ui-react';\r\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\r\nimport 'react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css';\r\nimport * as patientThunks from '../../redux/thunks/patient';\r\n\r\nconst genderOptions = [\r\n    { key: 'm', text: 'Male', value: 'male' },\r\n    { key: 'f', text: 'Female', value: 'female' }\r\n];\r\n\r\nexport class NewPatientForm extends React.Component {\r\n    savePatient (event) {\r\n        event.preventDefault();\r\n        const patientData = {\r\n            name: 'Андрей Антипов',\r\n            birthDate: '2019-05-06',\r\n            diseaseId: 1,\r\n            doctorId: 1\r\n        };\r\n        this.props.create(patientData);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Modal trigger={<Button>Add patient</Button>}>\r\n                <Modal.Header>Add new patient</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field label=\"Name\" type=\"text\" control={Input}/>\r\n                        <Form.Field label=\"Gender\" control={Select} options={genderOptions}/>\r\n                        <Form.Field>\r\n                            <label>Age</label>\r\n                            <SemanticDatepicker onDateChange={() => {\r\n                            }}/>\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button positive icon='checkmark' content=\"Save\" type='submit' onClick={this.savePatient}/>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    {\r\n        create: patientThunks.create\r\n    }\r\n)(NewPatientForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Sidebar, Menu, Ref } from 'semantic-ui-react';\r\nimport NewPatientForm from '../NewPatientFormModal/NewPatientFormModal';\r\nimport * as patientThunks from '../../redux/thunks/patient';\r\nimport * as patientsThunks from '../../redux/thunks/patients';\r\n\r\nexport class SidebarList extends React.Component {\r\n    state = {\r\n        opened: false,\r\n        animating: false\r\n    };\r\n\r\n    sidebarRef = null;\r\n    componentDidMount () {\r\n        this.props.getPatients();\r\n    }\r\n\r\n    componentWillReceiveProps (nextProps) {\r\n        if (!nextProps.trigger || nextProps.trigger === this.props.trigger) {\r\n            return;\r\n        }\r\n\r\n        nextProps.trigger.addEventListener('click', this.openSidebar);\r\n        nextProps.trigger.style.cursor = 'pointer';\r\n    }\r\n\r\n    openSidebar = () => {\r\n        this.setState({\r\n            opened: true,\r\n            animating: true\r\n        }, () => {\r\n            document.addEventListener('click', this.closeSidebar);\r\n        });\r\n    };\r\n\r\n    closeSidebar = (e) => {\r\n        if (this.state.animating || this.sidebarRef.contains(e.target)) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            opened: false,\r\n            animating: true\r\n        });\r\n\r\n        document.removeEventListener('click', this.closeSidebar);\r\n    };\r\n\r\n    async patientOnClick (e, patient) {\r\n        await this.props.getPatient(patient.id);\r\n\r\n        document.body.click();\r\n    }\r\n\r\n    render () {\r\n        const { patients } = this.props;\r\n\r\n        return (\r\n            <Ref innerRef={node => {\r\n                this.sidebarRef = node;\r\n            }}>\r\n                <Sidebar\r\n                    as={Menu}\r\n                    animation='overlay'\r\n                    vertical\r\n                    visible={this.state.opened}\r\n                    onShow={() => this.setState({ animating: false })}\r\n                    onHide={() => this.setState({ animating: false })}\r\n                    width='wide'\r\n                >\r\n                    <h2>Patients</h2>\r\n                    {patients.map((patient, index) => {\r\n                        return (\r\n                            <Menu.Item as='div'\r\n                                key={patient.id}\r\n                                onClick={(e) => this.patientOnClick(e, patient)}\r\n                                style={{ cursor: 'pointer' }}>\r\n                                {patient.name} ({patient.birthDate})\r\n                            </Menu.Item>\r\n                        );\r\n                    })}\r\n                    <Menu.Item as={NewPatientForm}/>\r\n                </Sidebar>\r\n            </Ref>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    store => ({\r\n        patients: store.patients || []\r\n    }),\r\n    {\r\n        getPatient: patientThunks.get,\r\n        getPatients: patientsThunks.get\r\n    }\r\n)(SidebarList);\r\n","import * as actionCreaters from '../reducers/patients';\r\nimport * as service from '../../Services/patientService';\r\n\r\nexport const get = () => {\r\n    return async dispatch => {\r\n        const patients = await service.getPatients();\r\n\r\n        dispatch(actionCreaters.put(patients));\r\n    };\r\n};\r\n\r\nexport const clear = () => dispatch => dispatch(actionCreaters.clear());\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Menu, Ref, Sidebar, Segment } from 'semantic-ui-react';\r\nimport PatientInfo from './components/PatientInfo/PatientInfo';\r\nimport States from './components/States/States';\r\nimport SidebarList from './components/SidebarList/SidebarList';\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n      burgerRef: null\r\n  };\r\n\r\n  render () {\r\n      return (\r\n          <Sidebar.Pushable as={Segment}>\r\n              <SidebarList trigger={this.state.burgerRef} />\r\n              <Sidebar.Pusher className=\"App\">\r\n                  <Menu attached=\"top\">\r\n                      <Ref innerRef={burger => this.setState({ burgerRef: burger })}>\r\n                          <Menu.Item icon=\"bars\" />\r\n                      </Ref>\r\n                  </Menu>\r\n                  <PatientInfo />\r\n                  {/* принимаем на веру то, что бек создаёт статус при создании пациента */}\r\n                  <States />\r\n              </Sidebar.Pusher>\r\n          </Sidebar.Pushable>\r\n      );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}